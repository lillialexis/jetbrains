<templateSet group="Objective-C">
  <template name="for" value="for (int $INDEX$ = 0; $COPY_INDEX$ &lt; $UPPER_BOUND$; $COPY_INDEX$++) {&#10;$END$&#10;}" description="Indexed for(;;) loop" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="suggestIndexName()" defaultValue="" alwaysStopAt="true" />
    <variable name="COPY_INDEX" expression="INDEX" defaultValue="" alwaysStopAt="false" />
    <variable name="UPPER_BOUND" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="false" />
      <option name="HTML" value="false" />
      <option name="XSL_TEXT" value="false" />
      <option name="XML" value="false" />
      <option name="OTHER" value="false" />
    </context>
  </template>
  <template name="ibac" value="- (IBAction)$MESSAGE$:(id)sender$END$" description="-(IBAction)message:(id)sender" toReformat="true" toShortenFQNames="true">
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="propw" value="@property (nonatomic, weak) $DECLARATION$;$END$" description="@property (weak)" toReformat="true" toShortenFQNames="true">
    <variable name="DECLARATION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="false" />
      <option name="HTML" value="false" />
      <option name="XSL_TEXT" value="false" />
      <option name="XML" value="false" />
      <option name="OTHER" value="false" />
    </context>
  </template>
  <template name="props" value="@property (nonatomic, strong) $DECLARATION$;$END$" description="@property (strong)" toReformat="true" toShortenFQNames="true">
    <variable name="DECLARATION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="false" />
      <option name="HTML" value="false" />
      <option name="XSL_TEXT" value="false" />
      <option name="XML" value="false" />
      <option name="OTHER" value="false" />
    </context>
  </template>
  <template name="alog" value="ALog(@&quot;$END$&quot;);" description="Insert ALog() line" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="false" />
      <option name="HTML" value="false" />
      <option name="XSL_TEXT" value="false" />
      <option name="XML" value="false" />
      <option name="OTHER" value="false" />
    </context>
  </template>
  <template name="ibout" value="@property (nonatomic, strong) IBOutlet $CLASS$ *$VAR$;$END$&#10;" description="@property (nonatomic, strong) IBOutlet" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS" expression="guessElementType()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML_TEXT" value="false" />
      <option name="HTML" value="false" />
      <option name="XSL_TEXT" value="false" />
      <option name="XML" value="false" />
      <option name="OTHER" value="false" />
    </context>
  </template>
  <template name="view" value="- (void)viewDidLoad&#10;{&#10;    DLog(@&quot;&quot;);&#10;    [super viewDidLoad];&#10;}&#10;&#10;- (void)viewWillAppear:(BOOL)animated&#10;{&#10;    DLog(@&quot;&quot;);&#10;    [super viewWillAppear:animated];&#10;}&#10;&#10;-(void)viewDidAppear:(BOOL)animated&#10;{&#10;    DLog(@&quot;&quot;);&#10;    [super viewDidAppear:animated];&#10;}&#10;&#10;- (void)viewWillDisappear:(BOOL)animated&#10;{&#10;    DLog(@&quot;&quot;);&#10;    [super viewWillDisappear:animated];&#10;}&#10;&#10;- (void)viewDidDisappear:(BOOL)animated&#10;{&#10;    DLog(@&quot;&quot;);&#10;    [super viewDidDisappear:animated];&#10;}&#10;" description="Insert view cycle methods" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
</templateSet>